@inherits LayoutComponentBase

@using FeelFlowAnalysis.Models.ViewModels
@using System.Security.Claims

@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">
  <div class="sidebar">
    <NavMenu />
  </div>
  <main>
    <div class="top-row">
      <div style="margin-left: 1rem;">
        <pre class="top-row-text">FeelFlow Analysis uses FeelFlow API. To see the licence, check this <a style="margin: 0;" href="https://github.com/troubleShooter239/FeelFlow-analysis">link</a>.
Might be mistakes. Verify the responses of AI.</pre>
      </div>
      <div>
        @if (HttpContext!.User.Identity!.IsAuthenticated)
        {
          <p class="top-row-text">@userEmail</p>    
          <NavLink href="logout"><button class="btn btn-primary">Log out</button></NavLink>
        }
        else
        {
          <div class="button-pos">
            <NavLink href="login"><button class="btn btn-primary">Log in</button></NavLink>
            <NavLink href="signup"><button class="btn btn-primary">Sign up</button></NavLink>
          </div>
        }
      </div>
    </div>

    <article class="content px-4">@Body</article>
  </main>
</div>

<div id="blazor-error-ui">
  An unhandled error has occurred.
  <a href="" class="reload">Reload</a>
  <a class="dismiss">🗙</a>
</div>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private async Task LogOut()
    {
      await HttpContext!.SignOutAsync();
      navigationManager.NavigateTo("/", true);
    }
    private string? userEmail;
    protected override async Task OnInitializedAsync()
    {
      await base.OnInitializedAsync();
      var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
      var user = authState.User;

      if (user.Identity?.IsAuthenticated ?? false)
        userEmail = user.FindFirst(c => c.Type == ClaimTypes.Email)?.Value ?? "";
    }
}